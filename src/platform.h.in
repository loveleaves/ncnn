// Tencent is pleased to support the open source community by making ncnn available.
//
// Copyright (C) 2017 THL A29 Limited, a Tencent company. All rights reserved.
//
// Licensed under the BSD 3-Clause License (the "License"); you may not use this file except
// in compliance with the License. You may obtain a copy of the License at
//
// https://opensource.org/licenses/BSD-3-Clause
//
// Unless required by applicable law or agreed to in writing, software distributed
// under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
// CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

#ifndef NCNN_PLATFORM_H
#define NCNN_PLATFORM_H

#cmakedefine01 NCNN_STDIO
#cmakedefine01 NCNN_STRING
#cmakedefine01 NCNN_BENCHMARK
#cmakedefine01 NCNN_THREADS
#cmakedefine01 NCNN_PIXEL
#cmakedefine01 NCNN_PIXEL_DRAWING
#cmakedefine01 NCNN_GNU_INLINE_ASM
#cmakedefine01 NCNN_AVX
#cmakedefine01 NCNN_XOP
#cmakedefine01 NCNN_FMA
#cmakedefine01 NCNN_F16C
#cmakedefine01 NCNN_AVX2
#cmakedefine01 NCNN_AVXVNNI
#cmakedefine01 NCNN_AVXVNNIINT8
#cmakedefine01 NCNN_AVXVNNIINT16
#cmakedefine01 NCNN_AVXNECONVERT
#cmakedefine01 NCNN_AVX512
#cmakedefine01 NCNN_AVX512VNNI
#cmakedefine01 NCNN_AVX512BF16
#cmakedefine01 NCNN_AVX512FP16
#cmakedefine01 NCNN_SIMPLEOCV
#cmakedefine01 NCNN_FORCE_INLINE

#include <algorithm>
#include <list>
#include <vector>
#include <string>

#include <math.h>

#define NCNN_EXPORT 

#if NCNN_STDIO
#include <stdio.h>
#define NCNN_LOGE(...)                  \
    do                                  \
    {                                   \
        fprintf(stderr, ##__VA_ARGS__); \
        fprintf(stderr, "\n");          \
    } while (0)
#endif

#if NCNN_FORCE_INLINE
    #ifdef _MSC_VER
        #define NCNN_FORCEINLINE __forceinline
    #elif defined(__GNUC__)
        #define NCNN_FORCEINLINE inline __attribute__((__always_inline__))
    #elif defined(__CLANG__)
        #if __has_attribute(__always_inline__)
            #define NCNN_FORCEINLINE inline __attribute__((__always_inline__))
        #else
            #define NCNN_FORCEINLINE inline
        #endif
    #else
        #define NCNN_FORCEINLINE inline
    #endif
#else
    #define NCNN_FORCEINLINE inline
#endif

#endif // NCNN_PLATFORM_H
